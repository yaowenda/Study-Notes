## 3.1 内存漏洞

### 一、内存结构和缓冲区溢出

### 栈 栈帧

![image-20250416215828172](assets/image-20250416215828172.png)

**什么是栈帧？**

栈帧是程序在函数调用时，在栈内存中分配的一块区域，用来保存该函数调用期间的各种信息。每次调用函数时，系统会为该函数分配一个栈帧，栈帧中的信息包含了函数执行所需的所有数据（如局部变量、参数、返回地址等）。



当函数被调用时，系统会为这个函数开辟一个新的栈帧，并把它压入栈区中，所以正在运行的函数总是在系统栈区的栈顶（本书称为：**当前栈帧**）。当函数返回时，系统会弹出该函数所对应的栈帧空间。

**栈帧的生长方向是从高地址向低地址增长的。**

![image-20250416220347651](assets/image-20250416220347651.png)

ESP寄存器，存放的指针指向当前栈帧的栈顶

EBP寄存器，存放的指针指向当前栈帧的栈底

所以，ESP和EBP之间的空间即为当前栈帧的空间



EIP寄存器，存放的指针指向下一条将要执行的指令



### 一个函数栈帧包含

1、前一个栈帧的栈底位置，即前栈帧EBP，用于在函数调用结束后恢复主调函数的栈帧

2、该函数的局部变量

3、函数调用的参数

4、函数的返回地址RET（**通常是函数调用语句的下一条指令的地址**），用于保存函数调用前指令的位置，以便函数返回时能恢复到调用前的代码区中继续执行指令